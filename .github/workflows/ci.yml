name: CI

on:
  #push:
  #  branches: ['**']
  pull_request:
    branches: ['**']

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-24.04
    env: 
      RABBITMQ_IMAGE_REPOSITORY: ${{ secrets.RABBITMQ_IMAGE_REPOSITORY }}
      
    services:
      rabbitmq:
        image: $RABBITMQ_IMAGE_REPOSITORY/rabbitmq_service_dev:latest
        ports:
          - 5672:5672    # AMQP port for test scripts to connect
#
        # options: >        # Optional: Wait for RabbitMQ to be ready before running tests
        #   --health-cmd="rabbitmq-diagnostics -q ping"
        #   --health-interval=10s
        #   --health-timeout=5s
        #   --health-retries=6
#
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.9.19
        uses: actions/setup-python@v3
        with:
          python-version: '3.9.19'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Needed because load_dotenv() looks for a .env file
      - name: Create .env file from GitHub Secrets
        run: |
          echo "DB_SERVER_DEV=${{ secrets.DB_SERVER_DEV }}" >> .env
          echo "DB_DATABASE_DEV=${{ secrets.DB_DATABASE_DEV }}" >> .env
          echo "DB_DATABASE_PORT=${{ secrets.DB_DATABASE_PORT }}" >> .env
          echo "DB_USERNAME_DEV=${{ secrets.DB_USERNAME_DEV }}" >> .env
          echo "DB_PASSWORD_DEV=${{ secrets.DB_PASSWORD_DEV }}" >> .env
          echo "DB_DRIVER_DEV=${{ secrets.DB_DRIVER_DEV }}" >> .env
          echo "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" >> .env
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> .env
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> .env
          echo "WEB_FE_ORIGIN=${{ secrets.WEB_FE_ORIGIN }}" >> .env
          echo "RABBITMQ_HOST=localhost" >> .env                            # For integration test
          echo "RABBITMQ_PORT=${{ secrets.RABBITMQ_PORT }}" >> .env

     #- name: Wait for RabbitMQ to be ready
     #  run: |
     #    for i in {1..10}; do
     #      nc -z localhost 5672 && echo "RabbitMQ is up" && break
     #      echo "Waiting for RabbitMQ..."
     #      sleep 5
     #    done

      - name: Test with pytest
        run: |
          pytest