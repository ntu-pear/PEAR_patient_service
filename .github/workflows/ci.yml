name: CI

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-24.04

    env:
      DB_SERVER_DEV: ${{ secrets.DB_SERVER_DEV }}
      DB_DATABASE_DEV: ${{ secrets.DB_DATABASE_DEV }}
      DB_DATABASE_PORT: ${{ secrets.DB_DATABASE_PORT }}
      DB_USERNAME_DEV: ${{ secrets.DB_USERNAME_DEV }}
      DB_PASSWORD_DEV: ${{ secrets.DB_PASSWORD_DEV }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      WEB_FE_ORIGIN: ${{ secrets.WEB_FE_ORIGIN }}
      RABBITMQ_MESSAGE_REPOSITORY: ${{ secrets.RABBITMQ_MESSAGE_REPOSITORY }}


    services:
      rabbitmq:
        image: ${ RABBITMQ_MESSAGE_REPOSITORY }/pear_message_queue:latest
        ports:
          - 5672:5672    # AMQP port for test scripts to connect

        # options: >        # Optional: Wait for RabbitMQ to be ready before running tests
        #   --health-cmd="rabbitmq-diagnostics -q ping"
        #   --health-interval=10s
        #   --health-timeout=5s
        #   --health-retries=6

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.9.19
        uses: actions/setup-python@v3
        with:
          python-version: '3.9.19'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

     #- name: Wait for RabbitMQ to be ready
     #  run: |
     #    for i in {1..10}; do
     #      nc -z localhost 5672 && echo "RabbitMQ is up" && break
     #      echo "Waiting for RabbitMQ..."
     #      sleep 5
     #    done

      - name: Test with pytest
        run: |
          pytest