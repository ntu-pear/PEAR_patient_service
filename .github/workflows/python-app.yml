# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-24.04

    env:
      DB_SERVER_DEV: ${{ secrets.DB_SERVER_DEV }}
      DB_DATABASE_DEV: ${{ secrets.DB_DATABASE_DEV }}
      DB_DATABASE_PORT: ${{ secrets.DB_DATABASE_PORT }}
      DB_USERNAME_DEV: ${{ secrets.DB_USERNAME_DEV }}
      DB_PASSWORD_DEV: ${{ secrets.DB_PASSWORD_DEV }}


    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9.19
      uses: actions/setup-python@v3
      with:
        python-version: "3.9.19"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Print environment variables (excluding sensitive ones)
      run: |
        echo "DB_SERVER_DEV=${{ secrets.DB_SERVER_DEV }}"
        echo "DB_DATABASE_DEV=${{ secrets.DB_DATABASE_DEV }}"
        echo "DB_DATABASE_PORT=${{ secrets.DB_DATABASE_PORT }}"
        # Construct the URL here (this is for logging purposes)
        DB_URL="postgresql://${{ secrets.DB_USERNAME_DEV }}:@${{ secrets.DB_SERVER_DEV }}:${{ secrets.DB_DATABASE_PORT }}/${{ secrets.DB_DATABASE_DEV }}"
        echo "Database URL (without password): $DB_URL"
    
    # pip install pytest  
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
